#include<stdio.h>
#include<stdlib.h>

struct Node
{
  int data;
  struct Node *next;
};
void insertStart (struct Node **head, int data)
{

  struct Node *newNode = (struct Node *) malloc (sizeof (struct Node));

  newNode->data = data;
  newNode->next = *head;

  *head = newNode;
  printf ("%d Inserted\n", newNode->data);
}

void deleteStart (struct Node **head)
{
  struct Node *temp = *head;

  if (*head == NULL)
    {
      printf ("Linked List Empty, nothing to delete");
      return;
    }

  *head = (*head)->next;

  printf ("\n%d deleted\n", temp->data);
  free (temp);
}


void lastInsert(struct Node** head, int new_data)
{printf("\n%d Inserted at last\n",new_data);
    struct Node* new_node
        = (struct Node*)malloc(sizeof(struct Node));
    new_node->data = new_data;
 
    struct Node* last = *head;
 
    new_node->next = NULL;
     if (*head == NULL) {
        *head = new_node;
        return;
    }
 
    while (last->next != NULL) {
        last = last->next;
    }
 
    last->next = new_node;
}

void display (struct Node *node)
{
  printf ("Linked List: ");

  while (node != NULL)
    {
      printf ("%d ", node->data);
      node = node->next;
    }
}
void deleteEnd(struct Node** head){
  struct Node* ptr;
    struct Node* last = *head;
    if(*head==NULL){
        printf("empty List");
        EXIT_SUCCESS;
    }
    while (last->next != NULL) {
          ptr=last;
        last = last->next;
    }
    ptr->next=NULL;
    free(last);
     printf(" \nLast Node deleted\n");

}

int main ()
{
  struct Node *head = NULL;

  insertStart (&head, 100);
  insertStart (&head, 80);
  insertStart (&head, 60);
  insertStart (&head, 40);
  insertStart (&head, 20);
  lastInsert(&head,120);
  lastInsert(&head,150);


  display (head);

  deleteStart (&head);
  deleteStart (&head);
  display (head);

  deleteEnd(&head);
  display(head);

  return 0;
}
