Chef has a string S consisting only of English lowercase letters (a - z). However, Hitesh does not like it and wants it to be reversed.

Hitesh wonders what is the minimum number of operations required to reverse the string S using the following operation:

Select any i such that 1≤i≤|S| and remove Si from its original position and append it to the end of the string (i.e. shift any character to the end of the string).
For e.g. if S= abcde and we apply operation on i=2, then S becomes acdeb.

Help Hitesh find the minimum number of operations required to reverse S.

It is guaranteed that it is possible to reverse the string in a finite number of operations.

Input Format
The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
Each test case consists of a single line containing the string S.
Output Format
For each test case, output the minimum number of operations required to reverse the string S.

Constraints
1≤T≤103
1≤|S|≤105
Sum of |S| over all testcases does not exceed 2⋅105.
Sample Input 1 
2
abdeba
codechef
Sample Output 1 
3
7
Explanation
Test case-1: Following steps can be performed:
abdeba→abebad
abebad→abeadb
abeadb→abedba
Test case-2: following steps can be performed:
codechef→codechfe
codechfe→codecfeh
codecfeh→codefehc
codefehc→codfehce
codfehce→cofehced
cofehced→cfehcedo
cfehcedo→fehcedoc

Codes Are:-
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        long long ans=0;
        
        string temp=s;
        reverse(s.begin(),s.end());
        long long i=0,j=0;
        
        while(i<s.length())
        {
            if(temp[i]==s[j])
            j++;
            else
                ans++;
                
            i++;
        }
        
        
        cout<<ans<<endl;
    }
}
